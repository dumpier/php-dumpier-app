<style>
div#game-skill { margin:auto; text-align:center; padding: 10px 100px; }


.game-battle-actor { position: relative; margin-bottom: 5px; }
.game-battle-actor .masker { display: none; position:absolute; width:100%; height:100%;opacity: 0.3; }

.game-gauge {background: #fd7e14; padding:1px; margin-bottom:5px; }
.game-gauge .bar { background: #17a2b8; width:100px; height:8px; }
.game-gauge .val { background:#fd7e14; width:40px; height:8px; }

#game-battle-log { position:fixed; bottom:0px; background:#f9f9f9; padding:5px; border: solid 5px #ddd; width:100vw; height: 400px; overflow: scroll; }
</style>

<div id="game-actor-list" style="position: relative;">
	<div style="position: absolute; width:100%; height:100%; opacity: 0.8;"><div id="game-skill"></div></div>

	<div style="float: left;">
		@foreach ($Battle->AllyDeck->Actors as $key=>$Actor)
		<div id="game-actor-{{$Actor->actor_id}}" class="game-battle-actor">
			<div class="masker"></div><!-- -------- mask -------- -->

			<div style="float: left;">{@ echo character()->image($Actor->actor_id) }</div>
			<div style="float: left; margin-left:5px;">
				<div class="game-gauge"><div class="bar"><div class="val"></div></div></div>
				<div class="game-gauge"><div class="bar"><div class="val"></div></div></div>
			</div>
			<br style="clear: both;">
		</div>
		@endforeach
	</div>

	<div style="float: right; text-align: right;">
		@foreach ($Battle->OppenentDeck->Actors as $key=>$Actor)
		<div id="game-actor-{{$Actor->actor_id}}" class="game-battle-actor">
			<div class="masker"></div><!-- -------- mask -------- -->

			<div style="float: right;">{@ echo character()->image($Actor->actor_id) }</div>
			<div style="float: right; margin-right:5px;">
				<div class="game-gauge"><div class="bar"><div class="val"></div></div></div>
				<div class="game-gauge"><div class="bar"><div class="val"></div></div></div>
			</div>
			<br style="clear: both;">
		</div>
		@endforeach
	</div>
	<br style="clear: both;">
</div>

<div id="game-battle-log"></div>

<script>
var battle = battle || {
	timeout : function(ms=1000) {
		return new Promise(resolve => setTimeout(() => { resolve(); }, ms));
	},

	play : async function() {
		console.log(this.logs);
		await this.rounds(this.logs);
	},

	rounds : async function(datas) {
		for (let key in datas) {
			let data = datas[key];
			$("#game-battle-log").append(`<p># round : ${data.round}</p>`);
			await this.turns(data.Turns);
		}
	},

	turns : async function(datas) {
		for (let key in datas) {
			let data = datas[key];
			$("#game-battle-log").append(`<p style="padding-left:5px;">- turn : ${data.turn}, actor : ${data.actor_id}</p>`);
			await this.effects(data.Effects);
		}
	},

	effects : async function(datas) {
		for (let key in datas) {
			let data = datas[key];

			$("#game-battle-log").append(`<p style="padding-left:10px;">- effect : ${key}, skill : ${data.skill_id}</p>`);
			// let effect_id = Math.floor( Math.random() * 5 ) + 1;
			// $("#game-skill").html(`<img src="/res/images/effect/${effect_id}.gif">`);

			await this.actions(data.Actions);
			$("#game-skill").html("");
		}
	},

	actions : async function(datas) {
		for (let key in datas) {
			let data = datas[key];
			await this.action(data);
		}
	},

	action : async function(data) {
		await this.actor(data);
		await this.target(data);
		await this.loging(data);
		await this.scroll();
		battle.el.get(data.actor_id).children("div.masker").hide();
		battle.el.get(data.target_id).children("div.masker").hide();
		return this.timeout(500);
	},

	actor : async function(data) {
		battle.el.get(data.actor_id).children("div.masker").css({"display":"block","background":"#007bff"});
		let effect_id = Math.floor( Math.random() * 5 ) + 1;
		battle.el.get(data.actor_id).children("div.masker").html(`<img width=100% height=100% src="/res/images/effect/${effect_id}.gif">`);

		battle.el.get(data.actor_id).effect("shake", {times:2, distance: 10, direction:"left"}, 10);
		return this.timeout(800);
	},

	target : async function(data) {
		battle.el.get(data.target_id).children("div.masker").css({"display":"block","background":"#e83e8c"});
		battle.el.get(data.target_id).effect("shake", {times:4, distance: 3, direction:"down"}, 10);
		return this.timeout(800);
	},

	loging : async function(data) {
		$("#game-battle-log").append(`<p style="padding-left:15px;">- action,  actor:${data.actor_id}, target:${data.target_id}</p>`);
	},

	scroll : async function() {
		document.getElementById("game-battle-log").scrollTop = document.getElementById("game-battle-log").scrollHeight;
	},

	logs : <?php echo ($Battle->LogManage->toJson()); ?>.logs,
}

battle.el = {
	get: function(actor_id) {
		return $("div#game-actor-" + actor_id);
	}
}

battle.play();
</script>


<?php ;?>
